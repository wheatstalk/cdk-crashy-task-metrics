// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot 1`] = `
Object {
  "Outputs": Object {
    "CrashAlarmName": Object {
      "Value": Object {
        "Ref": "CrashAlarm14F8CD7D",
      },
    },
  },
  "Parameters": Object {
    "AssetParameters2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27ArtifactHash703AFF5C": Object {
      "Description": "Artifact hash for asset \\"2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27\\"",
      "Type": "String",
    },
    "AssetParameters2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27S3Bucket86C43CCA": Object {
      "Description": "S3 bucket for asset \\"2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27\\"",
      "Type": "String",
    },
    "AssetParameters2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27S3VersionKey8DCA17E4": Object {
      "Description": "S3 key for asset version \\"2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24ArtifactHashBA91B77F": Object {
      "Description": "Artifact hash for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5": Object {
      "Description": "S3 bucket for asset \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
    "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861": Object {
      "Description": "S3 key for asset version \\"67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ClusterEB0386A7": Object {
      "Type": "AWS::ECS::Cluster",
    },
    "ClusterVpcFAA3CEDF": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "ClusterVpcIGW1E358A6E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "ClusterVpcPrivateSubnet1DefaultRoute3B4D40DD": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet1NATGateway0693C346",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet1RouteTableAssociation9B8A88D9": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet1RouteTable5AAEDA3F",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet1SubnetA4EB481A": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPrivateSubnet2DefaultRoute011666AF": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "ClusterVpcPublicSubnet2NATGateway00B24686",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPrivateSubnet2RouteTable73064A66": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPrivateSubnet2RouteTableAssociationFB21349E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPrivateSubnet2RouteTable73064A66",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPrivateSubnet2SubnetBD1ECB6E": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet1DefaultRoute62DA4B4B": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet1EIP433C56EE": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet1NATGateway0693C346": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet1EIP433C56EE",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet1RouteTable5594A636": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet1RouteTableAssociation0FBEF1F4": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet1RouteTable5594A636",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet1SubnetA9F7E0A5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet1SubnetA9F7E0A5": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcPublicSubnet2DefaultRoute97446C8A": Object {
      "DependsOn": Array [
        "ClusterVpcVPCGW47AC17E9",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "ClusterVpcPublicSubnet2EIP203DF3E5": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "ClusterVpcPublicSubnet2NATGateway00B24686": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "ClusterVpcPublicSubnet2EIP203DF3E5",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PublicSubnet2",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "ClusterVpcPublicSubnet2RouteTable7B43F18C": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "ClusterVpcPublicSubnet2RouteTableAssociation8446B27D": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "ClusterVpcPublicSubnet2RouteTable7B43F18C",
        },
        "SubnetId": Object {
          "Ref": "ClusterVpcPublicSubnet2Subnet059113C4",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "ClusterVpcPublicSubnet2Subnet059113C4": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "Name",
            "Value": "ItLit/Cluster/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "ClusterVpcVPCGW47AC17E9": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "ClusterVpcIGW1E358A6E",
        },
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "CrashAlarm14F8CD7D": Object {
      "Properties": Object {
        "ComparisonOperator": "GreaterThanThreshold",
        "Dimensions": Array [
          Object {
            "Name": "clusterArn",
            "Value": Object {
              "Fn::GetAtt": Array [
                "ClusterEB0386A7",
                "Arn",
              ],
            },
          },
          Object {
            "Name": "group",
            "Value": Object {
              "Fn::Join": Array [
                ":",
                Array [
                  "service",
                  Object {
                    "Fn::GetAtt": Array [
                      "ServiceD69D759B",
                      "Name",
                    ],
                  },
                ],
              ],
            },
          },
        ],
        "EvaluationPeriods": 1,
        "MetricName": "TaskCrashes",
        "Namespace": "cdk-crashy-task-metrics",
        "Period": 300,
        "Statistic": "Sum",
        "Threshold": 2,
        "TreatMissingData": "notBreaching",
      },
      "Type": "AWS::CloudWatch::Alarm",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3Bucket4D46ABB5",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters67b7823b74bc135986aa72f889d6a8da058d0c4a20cbc2dfc6f78995fdd2fc24S3VersionKeyB0F28861",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServiceD69D759B": Object {
      "Properties": Object {
        "Cluster": Object {
          "Ref": "ClusterEB0386A7",
        },
        "DeploymentConfiguration": Object {
          "MaximumPercent": 500,
          "MinimumHealthyPercent": 0,
        },
        "DesiredCount": 0,
        "EnableECSManagedTags": false,
        "LaunchType": "FARGATE",
        "NetworkConfiguration": Object {
          "AwsvpcConfiguration": Object {
            "AssignPublicIp": "DISABLED",
            "SecurityGroups": Array [
              Object {
                "Fn::GetAtt": Array [
                  "ServiceSecurityGroupC96ED6A7",
                  "GroupId",
                ],
              },
            ],
            "Subnets": Array [
              Object {
                "Ref": "ClusterVpcPrivateSubnet1SubnetA4EB481A",
              },
              Object {
                "Ref": "ClusterVpcPrivateSubnet2SubnetBD1ECB6E",
              },
            ],
          },
        },
        "TaskDefinition": Object {
          "Ref": "TaskDefinitionB36D86D9",
        },
      },
      "Type": "AWS::ECS::Service",
    },
    "ServiceMetricsPutMetricFunction9A4A1866": Object {
      "DependsOn": Array [
        "ServiceMetricsPutMetricFunctionServiceRoleDefaultPolicy669F3C39",
        "ServiceMetricsPutMetricFunctionServiceRole3533A74C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27S3Bucket86C43CCA",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27S3VersionKey8DCA17E4",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters2bbe3c6074ff4e9705d8fc6018d5e20d2e065f0a8b6f42e89f759bde898bfa27S3VersionKey8DCA17E4",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Handler": "put-metric.putTaskCrashedMetric",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ServiceMetricsPutMetricFunctionServiceRole3533A74C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ServiceMetricsPutMetricFunctionLogRetentionF80A6CFC": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "ServiceMetricsPutMetricFunction9A4A1866",
              },
            ],
          ],
        },
        "RetentionInDays": 1,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "ServiceMetricsPutMetricFunctionServiceRole3533A74C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ServiceMetricsPutMetricFunctionServiceRoleDefaultPolicy669F3C39": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudwatch:PutMetricData",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ServiceMetricsPutMetricFunctionServiceRoleDefaultPolicy669F3C39",
        "Roles": Array [
          Object {
            "Ref": "ServiceMetricsPutMetricFunctionServiceRole3533A74C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ServiceMetricsTaskCrashed051C0764": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "group": Array [
              Object {
                "Fn::Join": Array [
                  ":",
                  Array [
                    "service",
                    Object {
                      "Fn::GetAtt": Array [
                        "ServiceD69D759B",
                        "Name",
                      ],
                    },
                  ],
                ],
              },
            ],
            "lastStatus": Array [
              "STOPPED",
            ],
            "stoppedReason": Array [
              Object {
                "anything-but": Object {
                  "prefix": "Scaling activity",
                },
              },
            ],
          },
          "detail-type": Array [
            "ECS Task State Change",
          ],
          "source": Array [
            "aws.ecs",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ServiceMetricsPutMetricFunction9A4A1866",
                "Arn",
              ],
            },
            "Id": "Target0",
            "InputTransformer": Object {
              "InputPathsMap": Object {
                "f1": "$",
              },
              "InputTemplate": "{\\"metricNamespace\\":\\"cdk-crashy-task-metrics\\",\\"metricName\\":\\"TaskCrashes\\",\\"ecsTaskStateChangeEvent\\":<f1>}",
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ServiceMetricsTaskCrashedAllowEventRuleItLitServiceMetricsPutMetricFunctionF46EEE5E40D1B52B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ServiceMetricsPutMetricFunction9A4A1866",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ServiceMetricsTaskCrashed051C0764",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ServiceSecurityGroupC96ED6A7": Object {
      "Properties": Object {
        "GroupDescription": "ItLit/Service/SecurityGroup",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "ClusterVpcFAA3CEDF",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "TaskDefinitionB36D86D9": Object {
      "Properties": Object {
        "ContainerDefinitions": Array [
          Object {
            "Command": Array [
              "sh",
              "-c",
              "sleep 5 && exit 1",
            ],
            "Essential": true,
            "Image": "alpine:3",
            "Name": "crashy",
          },
        ],
        "Cpu": "256",
        "Family": "ItLitTaskDefinition67B6D166",
        "Memory": "512",
        "NetworkMode": "awsvpc",
        "RequiresCompatibilities": Array [
          "FARGATE",
        ],
        "TaskRoleArn": Object {
          "Fn::GetAtt": Array [
            "TaskDefinitionTaskRoleFD40A61D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ECS::TaskDefinition",
    },
    "TaskDefinitionTaskRoleFD40A61D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ecs-tasks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
